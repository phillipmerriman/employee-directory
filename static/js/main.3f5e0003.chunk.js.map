{"version":3,"sources":["component/EmployeeTable.js","component/TableHeader.js","component/SortByNameButton.js","component/SortByIdButton.js","component/FilterInput.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","props","employee","Object","keys","map","key","TableHeader","SortByNameButton","type","className","style","margin","onClick","sortByName","SortByIdButton","sortById","FilterInput","class","id","aria-label","aria-describedby","name","value","favoriteFoods","onChange","handleInputChange","App","state","employees","original","sort","a","b","setState","event","target","newFavFoods","filter","favoriteFood","toLowerCase","includes","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAaeA,MAXf,SAAuBC,GACrB,IAAIC,EAAWD,EAAMC,SACrB,OACE,6BACGC,OAAOC,KAAKF,GAAUG,KAAI,SAACC,GAAD,OACzB,6BAAKJ,EAASI,WCaPC,MAlBf,SAAqBN,GACnB,IAAIC,EAAWD,EAAMC,SACrB,OACE,gCACE,6BACGC,OAAOC,KAAKF,GAAUG,KAAI,SAACC,GAAD,OACzB,6BAAKA,YCUAE,MAhBf,SAA0BP,GAExB,OACE,8BACE,wBACEQ,KAAK,SACLC,UAAU,kBACVC,MAAO,CAACC,OAAQ,OAChBC,QAAS,kBAAMZ,EAAMa,cAJvB,8BCYSC,MAhBf,SAAwBd,GAEtB,OACE,8BACE,wBACEQ,KAAK,SACLC,UAAU,kBACVC,MAAO,CAACC,OAAQ,OAChBC,QAAS,kBAAMZ,EAAMe,YAJvB,4BCiBSC,MArBf,SAAqBhB,GACnB,OACE,sBAAKiB,MAAM,6BAAX,UACE,qBAAKA,MAAM,sBAAX,SACE,sBAAMA,MAAM,mBAAmBC,GAAG,uBAAlC,oEAIF,uBACEV,KAAK,OACLS,MAAM,eACNE,aAAW,QACXC,mBAAiB,uBACjBC,KAAK,gBACLC,MAAOtB,EAAMuB,cACbC,SAAUxB,EAAMyB,wBCkDTC,E,4MAxDbC,MAAQ,CACNC,YACAL,cAAe,GACfM,SAAUD,G,EAIZf,WAAa,WACX,IAAIe,EAAY,EAAKD,MAAMC,UAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEV,KAAOW,EAAEX,KAAQ,GAAK,KAC7E,EAAKY,SAAS,CAACL,e,EAIjBb,SAAW,WACT,IAAIa,EAAY,EAAKD,MAAMC,UAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEb,GAAKc,EAAEd,GAAM,GAAK,KACzE,EAAKe,SAAS,CAACL,e,EAIjBH,kBAAoB,SAACS,GAAW,IAAD,EACJA,EAAMC,OAAtBd,EADoB,EACpBA,KAAMC,EADc,EACdA,MACd,EAAKW,SAAL,eAAgBZ,EAAMC,IACtB,IAAMc,EAAc,EAAKT,MAAME,SAASQ,QAAO,SAACpC,GAC9C,OAAOA,EAASqC,aAAaC,cAAcC,SAASlB,EAAMiB,kBAE5D,EAAKN,SAAS,CAACL,UAAWQ,K,4CAI7B,WACE,OACE,gCACE,cAAC,EAAD,CACEvB,WAAY4B,KAAK5B,aAEnB,cAAC,EAAD,CACEE,SAAU0B,KAAK1B,WAEjB,cAAC,EAAD,CACEQ,cAAekB,KAAKd,MAAMJ,cAC1BE,kBAAmBgB,KAAKhB,oBAC1B,wBAAOhB,UAAU,iCAAjB,UACE,cAAC,EAAD,CAAaR,SAAU2B,EAAU,KACjC,gCACGa,KAAKd,MAAMC,UAAUxB,KAAI,SAACH,GAAD,OACxB,cAAC,EAAD,CACEA,SAAUA,mB,GAhDRyC,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3f5e0003.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction EmployeeTable(props) {\r\n  let employee = props.employee;\r\n  return (\r\n    <tr>\r\n      {Object.keys(employee).map((key) => (\r\n        <td>{employee[key]}</td>\r\n      ))}\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EmployeeTable;\r\n","import React from \"react\";\r\n\r\nfunction TableHeader(props) {\r\n  let employee = props.employee;\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        {Object.keys(employee).map((key) => (\r\n          <th>{key}</th>\r\n        ))}\r\n        {/* <th scope=\"col\">id</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Occupation</th>\r\n          <th scope=\"col\">Location</th> */}\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\n\r\nfunction SortByNameButton(props) {\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-primary\"\r\n        style={{margin: \"5px\"}}\r\n        onClick={() => props.sortByName()}\r\n      >\r\n        Sort by name!\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SortByNameButton;\r\n","import React from \"react\";\r\n\r\nfunction SortByIdButton(props) {\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-warning\"\r\n        style={{margin: \"5px\"}}\r\n        onClick={() => props.sortById()}\r\n      >\r\n        Sort by id!\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SortByIdButton;\r\n","import React from \"react\";\r\n\r\nfunction FilterInput(props) {\r\n  return (\r\n    <div class=\"input-group input-group-lg\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\" id=\"inputGroup-sizing-lg\">\r\n          Type in a food to filter employees by favorite food!\r\n        </span>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        aria-label=\"Large\"\r\n        aria-describedby=\"inputGroup-sizing-sm\"\r\n        name=\"favoriteFoods\"\r\n        value={props.favoriteFoods}  \r\n        onChange={props.handleInputChange}    \r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FilterInput;\r\n","import \"./App.css\";\r\nimport React, { Component } from \"react\";\r\nimport employees from \"./employees.json\";\r\nimport EmployeeTable from \"./component/EmployeeTable\";\r\nimport TableHeader from \"./component/TableHeader\";\r\nimport SortByNameButton from \"./component/SortByNameButton\";\r\nimport SortByIdButton from \"./component/SortByIdButton\";\r\nimport FilterInput from \"./component/FilterInput\";\r\n\r\nclass App extends Component {\r\n  // Setting this.state.employees to the employees json array\r\n  state = {\r\n    employees,\r\n    favoriteFoods: \"\",\r\n    original: employees\r\n  };\r\n\r\n  // sort employees by name\r\n  sortByName = () => {\r\n    let employees = this.state.employees.sort((a, b) => (a.name > b.name) ? 1 : -1);\r\n    this.setState({employees});\r\n  };\r\n\r\n  // sort employees by id\r\n  sortById = () => {\r\n    let employees = this.state.employees.sort((a, b) => (a.id > b.id) ? 1 : -1);\r\n    this.setState({employees});\r\n  }\r\n\r\n  // filter employees by favorite food\r\n  handleInputChange = (event) => {\r\n     const { name, value } = event.target;\r\n     this.setState({[name]:value});\r\n     const newFavFoods = this.state.original.filter((employee) => {\r\n       return employee.favoriteFood.toLowerCase().includes(value.toLowerCase());\r\n     });\r\n     this.setState({employees: newFavFoods});\r\n  }\r\n\r\n  // Map over this.state.employees and render an employee component for each employee object\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SortByNameButton \r\n          sortByName={this.sortByName}\r\n        />\r\n        <SortByIdButton \r\n          sortById={this.sortById} \r\n        />\r\n        <FilterInput \r\n          favoriteFoods={this.state.favoriteFoods} \r\n          handleInputChange={this.handleInputChange} />\r\n        <table className=\"table table-striped table-dark\">\r\n          <TableHeader employee={employees[0]} />\r\n          <tbody>\r\n            {this.state.employees.map((employee) => (\r\n              <EmployeeTable\r\n                employee={employee}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimportÂ 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}